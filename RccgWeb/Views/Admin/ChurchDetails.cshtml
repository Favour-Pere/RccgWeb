@model RccgWeb.ViewModel.ChurchStatsViewModel

@{
    ViewData["Title"] = "Church Details";
}

<h2>@Model.ChurchName - @Model.Year</h2>

<div class="card mt-3 mb-4 shadow-sm">
    <div class="card-header bg-success text-white">
        Pastor Information
    </div>
    <div class="card-body">
        <p><strong>Name:</strong> @Model.PastorName</p>
        <p><strong>Phone:</strong> @Model.PastorPhone</p>
        <p><strong>Email:</strong> @Model.PastorEmail</p>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <canvas id="offeringChart"></canvas>
    </div>
    <div class="col-md-6">
        <canvas id="titheChart"></canvas>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <canvas id="attendanceChart"></canvas>
    </div>
</div>
<div class="row mt-5">
    <div class="col-md-12">
        <h4>Recent Activities</h4>
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>Activity Name</th>
                    <th>Description</th>
                    <th>Date</th>
                    <th>Attendance</th>
                    <th>Offering</th>
                    <th>Tithe</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var activity in Model.RecentActivities)
                {
                    <tr>
                        <td>@activity.ActivityName</td>
                        <td>@activity.ActivityDescription</td>
                        <td>@activity.DateTimeSubmitted.ToString("dd MMM yyyy")</td>
                        <td>@activity.Attendance</td>
                        <td>@activity.Offering.ToString("C")</td>
                        <td>@activity.Tithe.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="ChurchDetails" asp-route-id="@Model.ChurchId" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="ChurchDetails" asp-route-id="@Model.ChurchId" asp-route-page="@i">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="ChurchDetails" asp-route-id="@Model.ChurchId" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        const labels = @Html.Raw(Json.Serialize(Model.MonthlyOfferings.Keys));

        const offeringData = {
            labels: labels,
            datasets: [{
                label: 'Monthly Offering',
                data: @Html.Raw(Json.Serialize(Model.MonthlyOfferings.Values)),
                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        };
         const titheData = {
            labels: labels,
            datasets: [{
                label: 'Monthly Tithe',
                data: @Html.Raw(Json.Serialize(Model.MonthlyTithes.Values)),
                backgroundColor: 'rgba(255, 206, 86, 0.5)',
                borderColor: 'rgba(255, 206, 86, 1)',
                borderWidth: 1
            }]
        };

        const attendanceData = {
            labels: labels,
            datasets: [{
                label: 'Monthly Attendance',
                data: @Html.Raw(Json.Serialize(Model.MonthlyAttendance.Values)),
                backgroundColor: 'rgba(75, 192, 192, 0.5)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        };

        new Chart(document.getElementById('offeringChart'), {
            type: 'bar',
            data: offeringData,
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        new Chart(document.getElementById('titheChart'), {
            type: 'bar',
            data: titheData,
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        new Chart(document.getElementById('attendanceChart'), {
            type: 'line',
            data: attendanceData,
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });
    </script>
}